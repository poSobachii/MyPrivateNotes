==============================================================================================================================
-------------------- RANDOM STUFF --------------------

https://snap.berkeley.edu/                  // po_sobachii & безсимволов
?variable=input                        //post form QUERY
netstat -ano                        // WINDOWS check your localhost PID to shut it down
add blitz in github => githubblitz.com   // to go straight to online editor


ansible-vault decrypt --vault-password-file ~/.ansible_vault            // ansible decrypt pass is written in 1 lane with no other characters
ansible-vault encrypt --vault-password-file ~/.ansible_vault            // ansible encrypt

git tag -a 2.64.1 -m "2.64.1" 69e07e88f499b53476c04a3193d239cfeb6f5297              // to add git tag
git push origin 2.64.1

git tag -a 8.3.0 -m "version tag 8.3.0"
git push origin master --follow-tags
git remote update origin --prune                    // update repos actual branches
git remote show origin                              // check all repo branches
git log                                             // to check branch from

> curl --header "Content-Type: application/json" \
    --request POST \
    --data '{"name":"peach"}' \
    http://localhost:8080/fruits

  // use this CURL to insert new fruit


telnet localhost 8080                   // to ping local host and check if its working

document.designMode = 'on'

==============================================================================================================================
-------------------- PUNCTUATION TYPES -------------------

slash                                       /
backslash	                                \
colon	                                    :
semicolon	                                ;
brackets	                                [ ]  ( )  { }  ⟨ ⟩
guillemets	                                ‹ ›  « »
quotation marks	                            ‘ ’  “ ”
apostrophe	                                ’
comma	                                    ,
full stop, period	                        .
ellipsis	                                …
exclamation mark	                        !
question mark	                            ?
dash	                                    ‒
hyphen	                                    ‐

ampersand	                                &
asterisk	                                *
at sign	                                    @
caret	                                    ^
degree	                                    °
double hyphen	                            =
number sign, pound, hash	                #
Division sign	                            ÷
tilde	                                    ~
underscore, understrike	                    _
vertical bar, pipe, broken bar	            |  ‖  ¦

==============================================================================================================================
-------------------- GOOGLE SEARCH HACKS -------------------

define:word                     // get explanation
“Puppy Dog Sweaters”            // exactly this phrase to search
Mustang -car                    // exclude word cars in search
Sidney Crosby site:nhl.com      // use at speficic site
link:nytimes.com                // linked pages to specific website
“Come * right now * me”         // wildcard asterisk is any word possible
related:amazon.com              // find website similar to specific
chocolate OR white chocolate    // search for pages that have either chocolate or white chocolate
teams have won the Stanley Cup ..2004       // exactly 2004 year is required
41..43                          // range 41, 42, 43

==============================================================================================================================
-------------------- IDEA CONFIGURATION --------------------

-ea                             // assertions enbling in VM options
spring.profiles.active=dev                  // in enviroment variables to turn on specific spring profile
-Dspring.profiles.active=dev                // in VM options

==============================================================================================================================
-------------------- LINUX BASH COMMANDS / MAC APPROVED --------------------

ls -a           // list all files
ls -l           // list in long desc.
pwd     // to show path
mkdir   // to make folder
rmdir   // to delete empty folder
touch filename.txt    // to make file

cat > hello.txt         // to create a file
mv hello.txt hello1.txt      //to rename a file
cp                           // to copy file
vi hello.txt     // to edit file. press "i" for insert or "esc" for quiting insert mode
ctrl + c , :x      // to save a file
:q :q!          // to quit file, and quit unsaved
nano hello.txt                  //read
less hello.txt                  //read
rm hello.txt            // to delete file
rm -r folder1           // to delete folder with conntent
rm -rf folder1          // delete folder without annoying spam

sudo yum install ansible
sudo yum install httpd      // to install apache server HTML website
sudo service httpd start    // to make available website
sudo vi index.html          // to create file

sudo pkill openconnect                  // kill app ?
sudo chmod 0755 /usr/local/bin/vpn.sh              // permissions ?
sudo vpn.sh nl                          // ?
sudo su - root                  // to change to root user
sudo chown ec2-user ansible/        // to change ownership
sudo nano /etc/environment       // locale issue fix
LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8

ssh-add -l
ssh-add ~/.ssh/id_rs            // your private public key
scp ansiblePuppetKeys.pem ec2-user@13.48.85.115:/var/ansible       // to copy to remote server

sh script.sh            // to execute sh script


==============================================================================================================================
-------------------- MAC CONFIGS --------------------

Command+Shift+G             // Finder to go desired folder
                            // .m2 hidden folder located in root path


history | grep 'variable'         // to search for something in terminal  MAC
                                  // complete history located in .zsh_history || .bash_history etc.

/usr/libexec/java_home -V               // to check java versions
ps -ef | grep java                  //to see all java processers MAC
netstat -anv | grep 8080            // to see if 8080 port is busy
netstat -vanp tcp | grep 3000       // alternative
sudo kill -9 <pid>           // to kill processor with ID MAC

/bin/bash                   // to switch to bash for current session
cat /etc/shells             // will list the default shells available in the machine
chsh -s /bin/bash           // to use bash as default shell
chsh -s /bin/zsh            // default zsh shell

open -e filename            // open file in editor

source ~/.bash_profile       // to run reload bash commands and use them.
sudo nano /etc/hosts         // to check mac hosts list

-------------------- BASH CONFIG FOR DIFFERENT JAVAS --------------------
JAVA versions

Type "cd ~/" to go to your home folder
Type "touch .bash_profile" to create your new file.
Edit .bash_profile with your favorite editor (or you can just type "open -e .bash_profile" to open it in TextEdit).
Type ". ~/.bash_profile" || "source ~/.bash_profile" to reload .bash_profile and update any functions you add.

export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)

alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'

# default to Java 11
java11

defaults write com.apple.finder AppleShowAllFiles TRUE          // to show hidden files in Finder
defaults write com.apple.finder AppleShowAllFiles FALSE         // to show hide hidden files in Finder



export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

nvm -v                      // to check nvm version

==============================================================================================================================
-------------------- JAVA TERMINAL RUN --------------------

javac               // compile .java file into .class file
java HelloWorld     // no .class needed to run a class
jar cfm HelloWorld.jar manifest.txt HelloWorld.class      // creating jar file
java -jar HelloWorld.jar

==============================================================================================================================
-------------------- ANSIBLE AD-HOC COMMANDS --------------------

ansible -i hosts.txt all -m ping     // to ping with inventory
ansible some_other_hosts -m setup       // all info from server
ansible all -m shell -a "sudo mkdir /var/ansible"   // shell bash command
ansible all -m copy -a "src=hosts.txt dest=/var/ansible"        // to copy files from ansible machine to hosts
ansible all -m copy -a "src=hosts.txt dest=/var/ansible2/hotst2.txt" -b     // to become sudo on puppet machine
ansible all -m file -a "path=/var/ansible/hotst2.txt state=absent"          // to delete some file
ansible all -m get_url -a "url=https://www.petmd.com/sites/default/files/Acute-Dog-Diarrhea-47066074.jpg dest=/var/ansible/"        // to download image
ansible all -m yum -a "name=httpd state=installed" -b           // install apache httpd on a server
ansible all -m yum -a "name=httpd state=removed" -b           // remove apache httpd on a server
ansible all -m shell -a "sudo service httpd start"              // start all apaches servers
ansible all -m uri -a "url=https://www.facebook.com"            // connection availability
ansible all -m uri -a "url=https://www.facebook.com return_content=yes"     // with content
ansible all -m service -a "name=httpd state=started enabled=yes" -b         // start apache  + always start
ansible]$ ansible some_other_hosts -m command  -a "ls /var" -vvvvv          // some other info from servers
ansible-playbook playbook.yml                                           // to play some playbook


ansible-inventory --list                    // to see all vars belong to what hosts

==============================================================================================================================
-------------------- TERRAFORM COMMANDS --------------------

/usr/local/keys             // keys to store usually
terraform init              // to initialize like git
terraform plan              // to see what tf will do
terraform apply             // to make a .tf plan

==============================================================================================================================
--------------------BEAN INITIALISATION--------------------

@Inject
private AbstractAutowireCapableBeanFactory factory;

factory.autowireBean(Object);
factory.initializeBean(Object, Object.getClass().getSimpleName());

==============================================================================================================================
--------------------ANGULAR--------------------    https://angular.io/tutorial

ng new someNaming               // to create default angular project
ng serve            --open                    // to start project
ng generate component heroes                    // to generate components
ng generate service hero                            // to generate service
npm install angular-in-memory-web-api --save            // install inbuilt memory


"strictPropertyInitialization": false in tsconfig.json      // ignores no intializer notification

==============================================================================================================================
--------------------CHROMEDRIVER--------------------

repo of drivers  -> https://chromedriver.storage.googleapis.com/index.html

mv chromedriver /usr/local/bin              // move executable to correct path (MAC)

==============================================================================================================================
