Arrays vs Collections :
Arrays
1. Size is fixed
2. Can hold both primitive types(boolean, byte, short, int, long â€¦etc) and object types.
3. There is no underlying data structures in arrays. The array itself used as data structure in java.
4. There is no utility methods in arrays

Collections
1. Size is not fixed, size is growable
2. Can hold only object types
3. Every Collection class there is underlying data structure.
4. Every Collection provides utility methods

Operator precedence:
https://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html



Download the Apache HttpClient library JAR files:

Go to the Apache HttpClient download page: https://hc.apache.org/downloads.cgi
Look for the version of the HttpClient you want to use (e.g., "HTTPComponents Core" or "HTTPComponents Client").
Download the JAR files for the core module and the client module.
Create a new folder in your project where you will keep external libraries (e.g., "lib").

Copy the downloaded JAR files to the "lib" folder.

Add the JAR files to your project's classpath:

In your IDE (Eclipse, IntelliJ, etc.), right-click on your project and select "Properties" or "Open Module Settings."
Navigate to the "Libraries" or "Dependencies" section.
Click the "Add JARs" or "Add External JARs" button and select the JAR files from the "lib" folder.
Now you can use the Apache HttpClient classes in your Java code.

Here's a sample code snippet for testing:


#Advanced JAVA

String immutable explained
stack/heap memory -> https://www.baeldung.com/java-stack-heap


#usefull
collections - https://www.javatpoint.com/collections-in-java